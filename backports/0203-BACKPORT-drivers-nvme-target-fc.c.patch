From: Valentine Fatiev <valentinef@nvidia.com>
Subject: [PATCH] BACKPORT: drivers/nvme/target/fc.c

---
 drivers/nvme/target/fc.c | 33 ++++++++++++++++++++++++++++++---
 1 file changed, 30 insertions(+), 3 deletions(-)

--- a/drivers/nvme/target/fc.c
+++ b/drivers/nvme/target/fc.c
@@ -2,6 +2,7 @@
 /*
  * Copyright (c) 2016 Avago Technologies.  All rights reserved.
  */
+
 #ifdef pr_fmt
 #undef pr_fmt
 #endif
@@ -1118,7 +1119,11 @@ nvmet_fc_alloc_target_assoc(struct nvmet
 	if (!assoc)
 		return NULL;
 
+#ifdef HAVE_IDA_ALLOC
 	idx = ida_alloc(&tgtport->assoc_cnt, GFP_KERNEL);
+#else
+	idx = ida_simple_get(&tgtport->assoc_cnt, 0, 0, GFP_KERNEL);
+#endif
 	if (idx < 0)
 		goto out_free_assoc;
 
@@ -1160,7 +1165,11 @@ nvmet_fc_alloc_target_assoc(struct nvmet
 out_put:
 	nvmet_fc_tgtport_put(tgtport);
 out_ida:
+#ifdef HAVE_IDA_FREE
 	ida_free(&tgtport->assoc_cnt, idx);
+#else
+	ida_simple_remove(&tgtport->assoc_cnt, idx);
+#endif
 out_free_assoc:
 	kfree(assoc);
 	return NULL;
@@ -1186,7 +1195,11 @@ nvmet_fc_target_assoc_free(struct kref *
 	/* if pending Rcv Disconnect Association LS, send rsp now */
 	if (oldls)
 		nvmet_fc_xmt_ls_rsp(tgtport, oldls);
+#ifdef HAVE_IDA_FREE
 	ida_free(&tgtport->assoc_cnt, assoc->a_id);
+#else
+	ida_simple_remove(&tgtport->assoc_cnt, assoc->a_id);
+#endif
 	dev_info(tgtport->dev,
 		"{%d:%d} Association freed\n",
 		tgtport->fc_target_port.port_num, assoc->a_id);
@@ -1386,7 +1399,11 @@ nvmet_fc_register_targetport(struct nvme
 		goto out_regtgt_failed;
 	}
 
+#ifdef HAVE_IDA_ALLOC
 	idx = ida_alloc(&nvmet_fc_tgtport_cnt, GFP_KERNEL);
+#else
+	idx = ida_simple_get(&nvmet_fc_tgtport_cnt, 0, 0, GFP_KERNEL);
+#endif
 	if (idx < 0) {
 		ret = -ENOSPC;
 		goto out_fail_kfree;
@@ -1436,7 +1453,11 @@ nvmet_fc_register_targetport(struct nvme
 out_free_newrec:
 	put_device(dev);
 out_ida_put:
+#ifdef HAVE_IDA_FREE
 	ida_free(&nvmet_fc_tgtport_cnt, idx);
+#else
+	ida_simple_remove(&nvmet_fc_tgtport_cnt, idx);
+#endif
 out_fail_kfree:
 	kfree(newrec);
 out_regtgt_failed:
@@ -1463,8 +1484,13 @@ nvmet_fc_free_tgtport(struct kref *ref)
 	/* let the LLDD know we've finished tearing it down */
 	tgtport->ops->targetport_delete(&tgtport->fc_target_port);
 
+#ifdef HAVE_IDA_FREE
 	ida_free(&nvmet_fc_tgtport_cnt,
 			tgtport->fc_target_port.port_num);
+#else
+	ida_simple_remove(&nvmet_fc_tgtport_cnt,
+			tgtport->fc_target_port.port_num);
+#endif
 
 	ida_destroy(&tgtport->assoc_cnt);
 
@@ -2083,11 +2109,9 @@ nvmet_fc_alloc_tgt_pgs(struct nvmet_fc_f
 {
 	struct scatterlist *sg;
 	unsigned int nent;
-
 	sg = sgl_alloc(fod->req.transfer_len, GFP_KERNEL, &nent);
 	if (!sg)
 		goto out;
-
 	fod->data_sg = sg;
 	fod->data_sg_cnt = nent;
 	fod->data_sg_cnt = fc_dma_map_sg(fod->tgtport->dev, sg, nent,
@@ -2097,7 +2121,6 @@ nvmet_fc_alloc_tgt_pgs(struct nvmet_fc_f
 	fod->next_sg = fod->data_sg;
 
 	return 0;
-
 out:
 	return NVME_SC_INTERNAL;
 }
@@ -2948,3 +2971,7 @@ module_init(nvmet_fc_init_module);
 module_exit(nvmet_fc_exit_module);
 
 MODULE_LICENSE("GPL v2");
+#ifdef RETPOLINE_MLNX
+MODULE_INFO(retpoline, "Y");
+#endif
+
