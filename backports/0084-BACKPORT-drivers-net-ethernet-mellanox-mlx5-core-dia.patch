From: Valentine Fatiev <valentinef@nvidia.com>
Subject: [PATCH] BACKPORT:
 drivers/net/ethernet/mellanox/mlx5/core/diag/fw_tracer.c

Change-Id: I81799f2a52a800f4adaa4bdce807b12c65e19235
---
 .../mellanox/mlx5/core/diag/fw_tracer.c       | 46 +++++++++++++++++--
 1 file changed, 41 insertions(+), 5 deletions(-)

--- a/drivers/net/ethernet/mellanox/mlx5/core/diag/fw_tracer.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/diag/fw_tracer.c
@@ -29,10 +29,13 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  * SOFTWARE.
  */
+#ifndef MLX_DISABLE_TRACEPOINTS
 #define CREATE_TRACE_POINTS
-#include "lib/eq.h"
-#include "fw_tracer.h"
 #include "fw_tracer_tracepoint.h"
+#endif
+#include "fw_tracer.h"
+
+#include "lib/eq.h"
 
 static int mlx5_query_mtrc_caps(struct mlx5_fw_tracer *tracer)
 {
@@ -442,8 +445,9 @@ static struct tracer_string_format *mlx5
 							     u8 event_id, u32 tmsn)
 {
 	struct tracer_string_format *message;
+	COMPAT_HL_NODE
 
-	hlist_for_each_entry(message, head, hlist)
+	compat_hlist_for_each_entry(message, head, hlist)
 		if (message->event_id == event_id && message->tmsn == tmsn)
 			return message;
 
@@ -527,10 +531,11 @@ static void mlx5_fw_tracer_clean_print_h
 {
 	struct tracer_string_format *str_frmt;
 	struct hlist_node *n;
+	COMPAT_HL_NODE
 	int i;
 
 	for (i = 0; i < MESSAGE_HASH_SIZE; i++) {
-		hlist_for_each_entry_safe(str_frmt, n, &tracer->hash[i], hlist)
+		compat_hlist_for_each_entry_safe(str_frmt, n, &tracer->hash[i], hlist)
 			mlx5_tracer_clean_message(str_frmt);
 	}
 }
@@ -555,7 +560,11 @@ static void mlx5_fw_tracer_save_trace(st
 	trace_data->timestamp = timestamp;
 	trace_data->lost = lost;
 	trace_data->event_id = event_id;
+#ifdef HAVE_STRSCPY_PAD
 	strscpy_pad(trace_data->msg, msg, TRACE_STR_MSG);
+#else
+	strncpy(trace_data->msg, msg, TRACE_STR_MSG);
+#endif
 
 	tracer->st_arr.saved_traces_index =
 		(tracer->st_arr.saved_traces_index + 1) & (SAVED_TRACES_NUM - 1);
@@ -578,8 +587,14 @@ void mlx5_tracer_print_trace(struct trac
 		 str_frmt->params[5],
 		 str_frmt->params[6]);
 
+#ifndef MLX_DISABLE_TRACEPOINTS
 	trace_mlx5_fw(dev->tracer, trace_timestamp, str_frmt->lost,
 		      str_frmt->event_id, tmp);
+#else
+	pr_debug("%s %llu %d %d %s\n", dev_name(&dev->pdev->dev),
+		 trace_timestamp, str_frmt->lost,
+		 str_frmt->event_id, tmp);
+#endif
 
 	mlx5_fw_tracer_save_trace(dev->tracer, trace_timestamp,
 				  str_frmt->lost, str_frmt->event_id, tmp);
@@ -834,6 +849,7 @@ static void mlx5_fw_tracer_ownership_cha
 	mlx5_fw_tracer_start(tracer);
 }
 
+#ifdef HAVE_DEVLINK_HEALTH_REPORT_SUPPORT
 static int mlx5_fw_tracer_set_core_dump_reg(struct mlx5_core_dev *dev,
 					    u32 *in, int size_in)
 {
@@ -936,11 +952,17 @@ unlock:
 	mutex_unlock(&tracer->st_arr.lock);
 	return err;
 }
+#endif /* HAVE_DEVLINK_HEALTH_REPORT_SUPPORT */
 
 static void mlx5_fw_tracer_update_db(struct work_struct *work)
 {
 	struct mlx5_fw_tracer *tracer =
-			container_of(work, struct mlx5_fw_tracer, update_db_work);
+#ifdef HAVE_CANCEL_WORK_EXPORTED
+			container_of(work,
+#else
+			container_of(to_delayed_work(work),
+#endif
+				     struct mlx5_fw_tracer, update_db_work);
 
 	mlx5_fw_tracer_reload(tracer);
 }
@@ -972,7 +994,11 @@ struct mlx5_fw_tracer *mlx5_fw_tracer_cr
 	INIT_WORK(&tracer->ownership_change_work, mlx5_fw_tracer_ownership_change);
 	INIT_WORK(&tracer->read_fw_strings_work, mlx5_tracer_read_strings_db);
 	INIT_WORK(&tracer->handle_traces_work, mlx5_fw_tracer_handle_traces);
+#ifdef HAVE_CANCEL_WORK_EXPORTED
 	INIT_WORK(&tracer->update_db_work, mlx5_fw_tracer_update_db);
+#else
+	INIT_DELAYED_WORK(&tracer->update_db_work, mlx5_fw_tracer_update_db);
+#endif
 	mutex_init(&tracer->state_lock);
 
 
@@ -1082,7 +1108,11 @@ void mlx5_fw_tracer_cleanup(struct mlx5_
 	/* It is valid to get here from update_db_work. Hence, don't wait for
 	 * update_db_work to finished.
 	 */
+#ifdef HAVE_CANCEL_WORK_EXPORTED
 	cancel_work(&tracer->update_db_work);
+#else
+	cancel_delayed_work(&tracer->update_db_work);
+#endif
 
 	if (tracer->owner)
 		mlx5_fw_tracer_ownership_release(tracer);
@@ -1181,7 +1211,11 @@ static int fw_tracer_event(struct notifi
 		queue_work(tracer->work_queue, &tracer->handle_traces_work);
 		break;
 	case MLX5_TRACER_SUBTYPE_STRINGS_DB_UPDATE:
+#ifdef HAVE_CANCEL_WORK_EXPORTED
 		queue_work(tracer->work_queue, &tracer->update_db_work);
+#else
+		queue_delayed_work(tracer->work_queue, &tracer->update_db_work, 0);
+#endif
 		break;
 	default:
 		mlx5_core_dbg(dev, "FWTracer: Event with unrecognized subtype: sub_type %d\n",
@@ -1191,4 +1225,6 @@ static int fw_tracer_event(struct notifi
 	return NOTIFY_OK;
 }
 
+#ifndef MLX_DISABLE_TRACEPOINTS
 EXPORT_TRACEPOINT_SYMBOL(mlx5_fw);
+#endif
